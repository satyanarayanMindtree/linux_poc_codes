- pgrep WDTservice; kill -KILL $(eval "pgrep WDTservice"); sleep 1; pgrep WDTservice

#!/bin/sh

count=`expr 0`

while true
do
    count=`expr $count + 1`
    echo "Count: $count"
    eval "pgrep WDTservice; kill -KILL $(eval "pgrep WDTservice"); sleep 1; pgrep WDTservice"
    sleep 20 
    echo ""
done





description "WDTservice"
author "Roger Light <roger@atchoo.org"

# KOPERA : as the local will be up start WDTservice.

start on filesystem

pre-start script
    # Make sure log this script executed
    touch /media/app/watchdog_upstart
    date >> /media/app/watchdog_upstart
end script

respawn
exec /bin/WDTservice -c 2


description "WDTservice"
author "Roger Light <roger@atchoo.org"

# KOPERA : as the local will be up start WDTservice.

pre-start script
    # Make sure log this script executed
    touch /tmp/watchdog_upstart
    date >> /tmp/watchdog_upstart
end script

respawn
exec /bin/WDTservice -c 2



####still startup need to do
description "WDTservice"
author "Roger Light <roger@atchoo.org"

# KOPERA : as the local will be up start WDTservice.

pre-start script
    # Make sure log this script executed
    touch /tmp/watchdog_upstart
    date >> /tmp/watchdog_upstart
end script

respawn
expect daemon
exec /bin/WDTservice





description "WDTservice"
author "Roger Light <roger@atchoo.org"

# KOPERA : as the local will be up start WDTservice.

pre-start script
    # Make sure log this script executed
    touch /tmp/watchdog_upstart
    date >> /tmp/watchdog_upstart
end script

respawn
exec /bin/test_exe


/*
/bin/test_exe

#!/bin/bash 
while true
do
    sleep 1
done
*/










description "WDTservice"
author "Roger Light <roger@atchoo.org"

# KOPERA : as the local will be up start WDTservice.

pre-start script
    # Make sure log this script executed
    touch /tmp/watchdog_upstart
    date >> /tmp/watchdog_upstart
end script

script
exec /bin/WDTservice
end script



description "WDTservice"
author "Roger Light <roger@atchoo.org"

# KOPERA : as the local will be up start WDTservice.
start on net-device-up IFACE=lo

pre-start script
    # Make sure log this script executed
    touch -p /tmp/watchdog_upstart
    date >> /tmp/watchdog_upstart
end script

respawn
exec /bin/WDTservice







# /etc/init/nodejs.conf
 
description "node.js server"
author      "Siva Gollapalli"
 
# used to be: start on startup
# until we found some mounts weren't ready yet while booting:
#start on started mountall
# If network interface is wireless
start on (local-filesystems and net-device-up IFACE=wlan0)
# If network interface is Ethernet uncomment below line and comment above line
#start on (local-filesystems and net-device-up IFACE=eth0)
 
stop on shutdown

pre-start script
    mkdir -p /var/log/yourcompany/
end script


# Automatically Respawn:
respawn
respawn limit 99 5
 
script
    # Not sure why $HOME is needed, but we found that it is:
    exec /bin/WDTservice
end script
 
post-start script
   # Optionally put a script here that will notify you node has (re)started
   # /root/bin/hoptoad.sh "node.js has started!"
end script




# Ubuntu upstart file at /etc/init/yourservice.conf

pre-start script
    mkdir -p /var/log/yourcompany/
end script

respawn
respawn limit 15 5

start on runlevel [2345]
stop on runlevel [06]

script

end script



#!/bin/sh

while true
do
    flag=$(eval "cat /tmp/test_flag")
    if [ $flag -gt 0 ];then
        echo "Flag: $flag"
        if [ $flag -eq 1 ];then
            echo "Need to crash system"
            eval "/tmp/a.out"
        fi
    fi
    sleep 2 
    echo ""
done